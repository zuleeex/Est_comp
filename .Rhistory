datos <- generar_datos_pacientes(n = n, generador = generador)
chisq <- realizar_chi_cuadrado(datos)
})
tiempos[[generador]] <- tiempo
}
return(tiempos)
}
#' @export
comparar_generadores <- function(n) {
resultados_tiempos <- comparar_tiempos(n)
cat("\nTiempos de ejecución para cada generador:\n")
print(resultados_tiempos)
tiempos_df <- data.frame(
Generador = names(resultados_tiempos),
Tiempo_Usuario = sapply(resultados_tiempos, function(x) x["user.self"]),
Tiempo_Sistema = sapply(resultados_tiempos, function(x) x["system.self"]),
Tiempo_Total = sapply(resultados_tiempos, function(x) x["elapsed"])
)
# Visualizar los tiempos de ejecución
print(
ggplot(tiempos_df, aes(x = Generador, y = Tiempo_Total, fill = Generador)) +
geom_bar(stat = "identity", color = "black", alpha = 0.7) +
labs(title = "Tiempos de Ejecución por Generador",
x = "Generador", y = "Tiempo (segundos)") +
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +
theme_minimal()
)
cat("\nReporte de Comparación de Tiempos y Resultados de Chi-Cuadrado:\n")
cat("------------------------------------------------------------\n")
for (generador in names(resultados_tiempos)) {
tiempo <- resultados_tiempos[[generador]]["user.self"]
datos <- generar_datos_pacientes(n, generador)
chisq_result <- realizar_chi_cuadrado(datos)
cat("\nResultado de la prueba chi-cuadrado para el generador", generador, ":\n")
cat("Tiempo de ejecución:", tiempo, "segundos\n")
cat("P-valor:", chisq_result$p.value, "\n")
cat("------------------------------------------------------------\n")
cat("\nDatos generados para el generador", generador, ":\n")
print(head(datos))
cat("------------------------------------------------------------\n")
}
datos_base <- generar_datos_pacientes(n = n, generador = "Base")
datos_pcg <- generar_datos_pacientes(n = n, generador = "PCG")
datos_mt <- generar_datos_pacientes(n = n, generador = "MT19937")
# Graficar comparacion de edades
print(graficar_comparacion(datos_base, datos_pcg, datos_mt))
}
#' @export
generar_datos_pacientes <- function(n, generador = "Base") {
semilla <- switch(generador,
"Base" = 123,
"PCG" = 456,
"MT19937" = 789)
set.seed(semilla)
nombres <- c("Esparza, Kyleigh", "Maez, Brittany", "el-Din, Rifqa",
"Rothschild Barleen, Kimberly", "Bennett, Franchi", "Nguyen, Haile")
pacientes <- sample(nombres, n, replace = TRUE)
edades <- sample(20:70, n, replace = TRUE)
frecuencias_cardiacas <- sample(60:120, n, replace = TRUE)
datos <- data.frame(Paciente = pacientes,
Edad = edades,
Frecuencia_Cardiaca = frecuencias_cardiacas)
return(datos)
}
#' @export
graficar_comparacion <- function(datos_base, datos_pcg, datos_mt) {
datos_comparados <- data.frame(
Generador = rep(c("Base", "PCG", "MT19937"), each = nrow(datos_base)),
Edad = c(datos_base$Edad, datos_pcg$Edad, datos_mt$Edad)
)
ggplot(datos_comparados, aes(x = Edad, fill = Generador)) +
geom_histogram(position = "dodge", binwidth = 2, color = "black", alpha = 0.7) +
labs(title = "Comparación de la Distribución de Edades Generadas por Diferentes Generadores",
x = "Edad", y = "Frecuencia") +
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +
theme_minimal()
}
#' @export
realizar_chi_cuadrado <- function(datos) {
hist_data <- hist(datos$Edad, plot = FALSE)
chisq_test <- chisq.test(hist_data$counts)
return(chisq_test)
}
#' @export
comparar_tiempos <- function(n) {
tiempos <- list()
generadores <- c("Base", "PCG", "MT19937")
for (generador in generadores) {
tiempo <- system.time({
datos <- generar_datos_pacientes(n = n, generador = generador)
chisq <- realizar_chi_cuadrado(datos)
})
tiempos[[generador]] <- tiempo
}
return(tiempos)
}
#' @export
comparar_generadores <- function(n) {
resultados_tiempos <- comparar_tiempos(n)
cat("\nTiempos de ejecución para cada generador:\n")
print(resultados_tiempos)
tiempos_df <- data.frame(
Generador = names(resultados_tiempos),
Tiempo_Usuario = sapply(resultados_tiempos, function(x) x["user.self"]),
Tiempo_Sistema = sapply(resultados_tiempos, function(x) x["system.self"]),
Tiempo_Total = sapply(resultados_tiempos, function(x) x["elapsed"])
)
# Visualizar los tiempos de ejecución
print(
ggplot(tiempos_df, aes(x = Generador, y = Tiempo_Total, fill = Generador)) +
geom_bar(stat = "identity", color = "black", alpha = 0.7) +
labs(title = "Tiempos de Ejecución por Generador",
x = "Generador", y = "Tiempo (segundos)") +
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +
theme_minimal()
)
cat("\nReporte de Comparación de Tiempos y Resultados de Chi-Cuadrado:\n")
cat("------------------------------------------------------------\n")
for (generador in names(resultados_tiempos)) {
tiempo <- resultados_tiempos[[generador]]["user.self"]
datos <- generar_datos_pacientes(n, generador)
chisq_result <- realizar_chi_cuadrado(datos)
cat("\nResultado de la prueba chi-cuadrado para el generador", generador, ":\n")
cat("Tiempo de ejecución:", tiempo, "segundos\n")
cat("P-valor:", chisq_result$p.value, "\n")
cat("------------------------------------------------------------\n")
cat("\nDatos generados para el generador", generador, ":\n")
print(head(datos))
cat("------------------------------------------------------------\n")
}
datos_base <- generar_datos_pacientes(n = n, generador = "Base")
datos_pcg <- generar_datos_pacientes(n = n, generador = "PCG")
datos_mt <- generar_datos_pacientes(n = n, generador = "MT19937")
# Graficar comparacion de edades
print(graficar_comparacion(datos_base, datos_pcg, datos_mt))
}
#' @export
generar_datos_pacientes <- function(n, generador = "Base") {
semilla <- switch(generador,
"Base" = 123,
"PCG" = 456,
"MT19937" = 789)
set.seed(semilla)
nombres <- c("Esparza, Kyleigh", "Maez, Brittany", "el-Din, Rifqa",
"Rothschild Barleen, Kimberly", "Bennett, Franchi", "Nguyen, Haile")
pacientes <- sample(nombres, n, replace = TRUE)
edades <- sample(20:70, n, replace = TRUE)
frecuencias_cardiacas <- sample(60:120, n, replace = TRUE)
datos <- data.frame(Paciente = pacientes,
Edad = edades,
Frecuencia_Cardiaca = frecuencias_cardiacas)
return(datos)
}
#' @export
graficar_comparacion <- function(datos_base, datos_pcg, datos_mt) {
datos_comparados <- data.frame(
Generador = rep(c("Base", "PCG", "MT19937"), each = nrow(datos_base)),
Edad = c(datos_base$Edad, datos_pcg$Edad, datos_mt$Edad)
)
ggplot(datos_comparados, aes(x = Edad, fill = Generador)) +
geom_histogram(position = "dodge", binwidth = 2, color = "black", alpha = 0.7) +
labs(title = "Comparación de la Distribución de Edades Generadas por Diferentes Generadores",
x = "Edad", y = "Frecuencia") +
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +
theme_minimal()
}
#' @export
realizar_chi_cuadrado <- function(datos) {
hist_data <- hist(datos$Edad, plot = FALSE)
chisq_test <- chisq.test(hist_data$counts)
return(chisq_test)
}
#' @export
comparar_tiempos <- function(n) {
tiempos <- list()
generadores <- c("Base", "PCG", "MT19937")
for (generador in generadores) {
tiempo <- system.time({
datos <- generar_datos_pacientes(n = n, generador = generador)
chisq <- realizar_chi_cuadrado(datos)
})
tiempos[[generador]] <- tiempo
}
return(tiempos)
}
#' @export
comparar_generadores <- function(n) {
resultados_tiempos <- comparar_tiempos(n)
cat("\nTiempos de ejecución para cada generador:\n")
print(resultados_tiempos)
tiempos_df <- data.frame(
Generador = names(resultados_tiempos),
Tiempo_Usuario = sapply(resultados_tiempos, function(x) x["user.self"]),
Tiempo_Sistema = sapply(resultados_tiempos, function(x) x["system.self"]),
Tiempo_Total = sapply(resultados_tiempos, function(x) x["elapsed"])
)
# Visualizar los tiempos de ejecución
print(
ggplot(tiempos_df, aes(x = Generador, y = Tiempo_Total, fill = Generador)) +
geom_bar(stat = "identity", color = "black", alpha = 0.7) +
labs(title = "Tiempos de Ejecución por Generador",
x = "Generador", y = "Tiempo (segundos)") +
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +
theme_minimal()
)
cat("\nReporte de Comparación de Tiempos y Resultados de Chi-Cuadrado:\n")
cat("------------------------------------------------------------\n")
for (generador in names(resultados_tiempos)) {
tiempo <- resultados_tiempos[[generador]]["user.self"]
datos <- generar_datos_pacientes(n, generador)
chisq_result <- realizar_chi_cuadrado(datos)
cat("\nResultado de la prueba chi-cuadrado para el generador", generador, ":\n")
cat("Tiempo de ejecución:", tiempo, "segundos\n")
cat("P-valor:", chisq_result$p.value, "\n")
cat("------------------------------------------------------------\n")
cat("\nDatos generados para el generador", generador, ":\n")
print(head(datos))
cat("------------------------------------------------------------\n")
}
datos_base <- generar_datos_pacientes(n = n, generador = "Base")
datos_pcg <- generar_datos_pacientes(n = n, generador = "PCG")
datos_mt <- generar_datos_pacientes(n = n, generador = "MT19937")
# Graficar comparacion de edades
print(graficar_comparacion(datos_base, datos_pcg, datos_mt))
}
#' @export
generar_datos_pacientes <- function(n, generador = "Base") {
semilla <- switch(generador,
"Base" = 123,
"PCG" = 456,
"MT19937" = 789)
set.seed(semilla)
nombres <- c("Esparza, Kyleigh", "Maez, Brittany", "el-Din, Rifqa",
"Rothschild Barleen, Kimberly", "Bennett, Franchi", "Nguyen, Haile")
pacientes <- sample(nombres, n, replace = TRUE)
edades <- sample(20:70, n, replace = TRUE)
frecuencias_cardiacas <- sample(60:120, n, replace = TRUE)
datos <- data.frame(Paciente = pacientes,
Edad = edades,
Frecuencia_Cardiaca = frecuencias_cardiacas)
return(datos)
}
#' @export
graficar_comparacion <- function(datos_base, datos_pcg, datos_mt) {
datos_comparados <- data.frame(
Generador = rep(c("Base", "PCG", "MT19937"), each = nrow(datos_base)),
Edad = c(datos_base$Edad, datos_pcg$Edad, datos_mt$Edad)
)
ggplot(datos_comparados, aes(x = Edad, fill = Generador)) +
geom_histogram(position = "dodge", binwidth = 2, color = "black", alpha = 0.7) +
labs(title = "Comparación de la Distribución de Edades Generadas por Diferentes Generadores",
x = "Edad", y = "Frecuencia") +
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +
theme_minimal()
}
#' @export
realizar_chi_cuadrado <- function(datos) {
hist_data <- hist(datos$Edad, plot = FALSE)
chisq_test <- chisq.test(hist_data$counts)
return(chisq_test)
}
#' @export
comparar_tiempos <- function(n) {
tiempos <- list()
generadores <- c("Base", "PCG", "MT19937")
for (generador in generadores) {
tiempo <- system.time({
datos <- generar_datos_pacientes(n = n, generador = generador)
chisq <- realizar_chi_cuadrado(datos)
})
tiempos[[generador]] <- tiempo
}
return(tiempos)
}
#' @export
comparar_generadores <- function(n) {
resultados_tiempos <- comparar_tiempos(n)
cat("\nTiempos de ejecución para cada generador:\n")
print(resultados_tiempos)
tiempos_df <- data.frame(
Generador = names(resultados_tiempos),
Tiempo_Usuario = sapply(resultados_tiempos, function(x) x["user.self"]),
Tiempo_Sistema = sapply(resultados_tiempos, function(x) x["system.self"]),
Tiempo_Total = sapply(resultados_tiempos, function(x) x["elapsed"])
)
# Visualizar los tiempos de ejecución
print(
ggplot(tiempos_df, aes(x = Generador, y = Tiempo_Total, fill = Generador)) +
geom_bar(stat = "identity", color = "black", alpha = 0.7) +
labs(title = "Tiempos de Ejecución por Generador",
x = "Generador", y = "Tiempo (segundos)") +
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +
theme_minimal()
)
cat("\nReporte de Comparación de Tiempos y Resultados de Chi-Cuadrado:\n")
cat("------------------------------------------------------------\n")
for (generador in names(resultados_tiempos)) {
tiempo <- resultados_tiempos[[generador]]["user.self"]
datos <- generar_datos_pacientes(n, generador)
chisq_result <- realizar_chi_cuadrado(datos)
cat("\nResultado de la prueba chi-cuadrado para el generador", generador, ":\n")
cat("Tiempo de ejecución:", tiempo, "segundos\n")
cat("P-valor:", chisq_result$p.value, "\n")
cat("------------------------------------------------------------\n")
cat("\nDatos generados para el generador", generador, ":\n")
print(head(datos))
cat("------------------------------------------------------------\n")
}
datos_base <- generar_datos_pacientes(n = n, generador = "Base")
datos_pcg <- generar_datos_pacientes(n = n, generador = "PCG")
datos_mt <- generar_datos_pacientes(n = n, generador = "MT19937")
# Graficar comparacion de edades
print(graficar_comparacion(datos_base, datos_pcg, datos_mt))
}
#' @export
generar_datos_pacientes <- function(n, generador = "Base") {
semilla <- switch(generador,
"Base" = 123,
"PCG" = 456,
"MT19937" = 789)
set.seed(semilla)
nombres <- c("Esparza, Kyleigh", "Maez, Brittany", "el-Din, Rifqa",
"Rothschild Barleen, Kimberly", "Bennett, Franchi", "Nguyen, Haile")
pacientes <- sample(nombres, n, replace = TRUE)
edades <- sample(20:70, n, replace = TRUE)
frecuencias_cardiacas <- sample(60:120, n, replace = TRUE)
datos <- data.frame(Paciente = pacientes,
Edad = edades,
Frecuencia_Cardiaca = frecuencias_cardiacas)
return(datos)
}
#' @export
graficar_comparacion <- function(datos_base, datos_pcg, datos_mt) {
datos_comparados <- data.frame(
Generador = rep(c("Base", "PCG", "MT19937"), each = nrow(datos_base)),
Edad = c(datos_base$Edad, datos_pcg$Edad, datos_mt$Edad)
)
ggplot(datos_comparados, aes(x = Edad, fill = Generador)) +
geom_histogram(position = "dodge", binwidth = 2, color = "black", alpha = 0.7) +
labs(title = "Comparación de la Distribución de Edades Generadas por Diferentes Generadores",
x = "Edad", y = "Frecuencia") +
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +
theme_minimal()
}
#' @export
realizar_chi_cuadrado <- function(datos) {
hist_data <- hist(datos$Edad, plot = FALSE)
chisq_test <- chisq.test(hist_data$counts)
return(chisq_test)
}
#' @export
comparar_tiempos <- function(n) {
tiempos <- list()
generadores <- c("Base", "PCG", "MT19937")
for (generador in generadores) {
tiempo <- system.time({
datos <- generar_datos_pacientes(n = n, generador = generador)
chisq <- realizar_chi_cuadrado(datos)
})
tiempos[[generador]] <- tiempo
}
return(tiempos)
}
#' @export
comparar_generadores <- function(n) {
resultados_tiempos <- comparar_tiempos(n)
cat("\nTiempos de ejecución para cada generador:\n")
print(resultados_tiempos)
tiempos_df <- data.frame(
Generador = names(resultados_tiempos),
Tiempo_Usuario = sapply(resultados_tiempos, function(x) x["user.self"]),
Tiempo_Sistema = sapply(resultados_tiempos, function(x) x["system.self"]),
Tiempo_Total = sapply(resultados_tiempos, function(x) x["elapsed"])
)
# Visualizar los tiempos de ejecución
print(
ggplot(tiempos_df, aes(x = Generador, y = Tiempo_Total, fill = Generador)) +
geom_bar(stat = "identity", color = "black", alpha = 0.7) +
labs(title = "Tiempos de Ejecución por Generador",
x = "Generador", y = "Tiempo (segundos)") +
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +
theme_minimal()
)
cat("\nReporte de Comparación de Tiempos y Resultados de Chi-Cuadrado:\n")
cat("------------------------------------------------------------\n")
for (generador in names(resultados_tiempos)) {
tiempo <- resultados_tiempos[[generador]]["user.self"]
datos <- generar_datos_pacientes(n, generador)
chisq_result <- realizar_chi_cuadrado(datos)
cat("\nResultado de la prueba chi-cuadrado para el generador", generador, ":\n")
cat("Tiempo de ejecución:", tiempo, "segundos\n")
cat("P-valor:", chisq_result$p.value, "\n")
cat("------------------------------------------------------------\n")
cat("\nDatos generados para el generador", generador, ":\n")
print(head(datos))
cat("------------------------------------------------------------\n")
}
datos_base <- generar_datos_pacientes(n = n, generador = "Base")
datos_pcg <- generar_datos_pacientes(n = n, generador = "PCG")
datos_mt <- generar_datos_pacientes(n = n, generador = "MT19937")
# Graficar comparacion de edades
print(graficar_comparacion(datos_base, datos_pcg, datos_mt))
}
devtools::document()
devtools::install()
library(generadores)
library(generadores)
library(generadores)
library(generadores)
remove.packages("generadores")
devtools::document()
devtools::install()
#' @export
generar_datos_pacientes <- function(n, generador = "Base") {
semilla <- switch(generador,
"Base" = 123,
"PCG" = 456,
"MT19937" = 789)
set.seed(semilla)
nombres <- c("Esparza, Kyleigh", "Maez, Brittany", "el-Din, Rifqa",
"Rothschild Barleen, Kimberly", "Bennett, Franchi", "Nguyen, Haile")
pacientes <- sample(nombres, n, replace = TRUE)
edades <- sample(20:70, n, replace = TRUE)
frecuencias_cardiacas <- sample(60:120, n, replace = TRUE)
datos <- data.frame(Paciente = pacientes,
Edad = edades,
Frecuencia_Cardiaca = frecuencias_cardiacas)
return(datos)
}
#' @export
graficar_comparacion <- function(datos_base, datos_pcg, datos_mt) {
datos_comparados <- data.frame(
Generador = rep(c("Base", "PCG", "MT19937"), each = nrow(datos_base)),
Edad = c(datos_base$Edad, datos_pcg$Edad, datos_mt$Edad)
)
ggplot(datos_comparados, aes(x = Edad, fill = Generador)) +
geom_histogram(position = "dodge", binwidth = 2, color = "black", alpha = 0.7) +
labs(title = "Comparación de la Distribución de Edades Generadas por Diferentes Generadores",
x = "Edad", y = "Frecuencia") +
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +
theme_minimal()
}
#' @export
realizar_chi_cuadrado <- function(datos) {
hist_data <- hist(datos$Edad, plot = FALSE)
chisq_test <- chisq.test(hist_data$counts)
return(chisq_test)
}
#' @export
comparar_tiempos <- function(n) {
tiempos <- list()
generadores <- c("Base", "PCG", "MT19937")
for (generador in generadores) {
tiempo <- system.time({
datos <- generar_datos_pacientes(n = n, generador = generador)
chisq <- realizar_chi_cuadrado(datos)
})
tiempos[[generador]] <- tiempo
}
return(tiempos)
}
#' @export
comparar_generadores <- function(n) {
resultados_tiempos <- comparar_tiempos(n)
cat("\nTiempos de ejecución para cada generador:\n")
print(resultados_tiempos)
tiempos_df <- data.frame(
Generador = names(resultados_tiempos),
Tiempo_Usuario = sapply(resultados_tiempos, function(x) x["user.self"]),
Tiempo_Sistema = sapply(resultados_tiempos, function(x) x["system.self"]),
Tiempo_Total = sapply(resultados_tiempos, function(x) x["elapsed"])
)
# Visualizar los tiempos de ejecución
print(
ggplot(tiempos_df, aes(x = Generador, y = Tiempo_Total, fill = Generador)) +
geom_bar(stat = "identity", color = "black", alpha = 0.7) +
labs(title = "Tiempos de Ejecución por Generador",
x = "Generador", y = "Tiempo (segundos)") +
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +
theme_minimal()
)
cat("\nReporte de Comparación de Tiempos y Resultados de Chi-Cuadrado:\n")
cat("------------------------------------------------------------\n")
for (generador in names(resultados_tiempos)) {
tiempo <- resultados_tiempos[[generador]]["user.self"]
datos <- generar_datos_pacientes(n, generador)
chisq_result <- realizar_chi_cuadrado(datos)
cat("\nResultado de la prueba chi-cuadrado para el generador", generador, ":\n")
cat("Tiempo de ejecución:", tiempo, "segundos\n")
cat("P-valor:", chisq_result$p.value, "\n")
cat("------------------------------------------------------------\n")
cat("\nDatos generados para el generador", generador, ":\n")
print(head(datos))
cat("------------------------------------------------------------\n")
}
datos_base <- generar_datos_pacientes(n = n, generador = "Base")
datos_pcg <- generar_datos_pacientes(n = n, generador = "PCG")
datos_mt <- generar_datos_pacientes(n = n, generador = "MT19937")
# Graficar comparacion de edades
print(graficar_comparacion(datos_base, datos_pcg, datos_mt))
}
library(generadores)
devtools::document()
devtools::install()
library(generadores)
# Y ya puedes usar tu función:
comparar_generadores(40)
library(ggplot2)
library(generadores)
# Y ya puedes usar tu función:
comparar_generadores(40)
git add .
